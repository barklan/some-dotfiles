[
    {
        "key": "tab",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.previousEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled && !terminalFocus && neovim.mode != 'insert'"
    },
    {
        "key": "tab",
        "command": "search.action.focusSearchList",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+p",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && !terminalFocus"
    },
    {
        "key": "ctrl+p",
        "command": "breadcrumbs.focusPreviousWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
    },
    {
        "key": "CapsLock",
        "command": "breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "capslock",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "CapsLock",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "key": "ctrl+[Slash]",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.init && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+a",
        "command": "-vscode-neovim.ctrl-a-insert",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
    },
    {
        "key": "alt+s",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g d",
        "command": "git.openChange",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+g k",
        "command": "git.checkout",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k c",
        "command": "-workbench.files.action.compareWithClipboard"
    },
    {
        "key": "ctrl+k c",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "alt+i",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+g j",
        "command": "workbench.action.tasks.runTask",
        "args": "git smart commit",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.quickOpen",
        "when": "!terminalFocus && !inQuickOpen && !dendron:pluginActive"
    },
    {
        "key": "alt+l",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
    },
    {
        "key": "l",
        "command": "notebook.cell.edit",
        "when": "notebookCellListFocused && notebookEditable && !inputFocus"
    },
    {
        "key": "ctrl+5",
        "command": "go.test.coverage"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.view.extension.test"
    },
    {
        "key": "ctrl+4",
        "command": "testing.runAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+g a",
        "command": "git.stage",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+r",
        "command": "redo"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "ctrl+alt+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && !dirtyDiffVisible && !findWidgetVisible && !inReferenceSearchEditor && !markersNavigationVisible && !notebookCellFocused && !notificationCenterVisible && !parameterHintsVisible && !referenceSearchVisible && neovim.mode == 'normal'"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.init && neovim.mode != 'normal'"
    },
    {
        "key": "alt+e",
        "command": "vscode-neovim.escape"
    },
    {
        "key": "alt+f1",
        "command": "-editor.action.showAccessibilityHelp"
    },
    {
        "key": "ctrl+a",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+a",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+e",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.c && neovim.init && !dirtyDiffVisible && !findWidgetVisible && !inReferenceSearchEditor && !markersNavigationVisible && !notebookCellFocused && !notificationCenterVisible && !parameterHintsVisible && !referenceSearchVisible && neovim.mode == 'normal' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.c && neovim.init && neovim.mode != 'normal' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "shift+;",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.init && focusedView == 'workbench.panel.output' && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+w",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.w && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+w",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.w && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+w -",
        "command": "-workbench.action.decreaseViewHeight",
        "when": "!editorTextFocus && !isAuxiliaryWindowFocusedContext && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w q",
        "command": "-workbench.action.closeActiveEditor",
        "when": "!editorTextFocus && !filesExplorerFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w ctrl+w",
        "command": "-workbench.action.focusNextGroup",
        "when": "!editorTextFocus && !filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w up",
        "command": "-workbench.action.navigateUp",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w k",
        "command": "-workbench.action.navigateUp",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w down",
        "command": "-workbench.action.navigateDown",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w j",
        "command": "-workbench.action.navigateDown",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w left",
        "command": "-workbench.action.navigateLeft",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w h",
        "command": "-workbench.action.navigateLeft",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w right",
        "command": "-workbench.action.navigateRight",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w l",
        "command": "-workbench.action.navigateRight",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w =",
        "command": "-workbench.action.evenEditorWidths",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w s",
        "command": "-workbench.action.splitEditorDown",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+w v",
        "command": "-workbench.action.splitEditorRight",
        "when": "!editorTextFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+alt+l",
        "command": "workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
]
